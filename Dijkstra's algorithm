#include <stdio.h>
#include <limits.h>
#define V 5

int minDist(int dist[], int sptSet[]) {
    int min = INT_MAX, minIdx = -1;
    for (int v = 0; v < V; v++)
        if (!sptSet[v] && dist[v] < min)
            min = dist[v], minIdx = v;
    return minIdx;
}

void dijkstra(int graph[V][V], int src) {
    int dist[V], sptSet[V] = {0};
    for (int i = 0; i < V; i++) dist[i] = INT_MAX;
    dist[src] = 0;

    for (int count = 0; count < V - 1; count++) {
        int u = minDist(dist, sptSet);
        sptSet[u] = 1;

        for (int v = 0; v < V; v++)
            if (!sptSet[v] && graph[u][v] && dist[u] + graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
    }

    printf("Vertex\tDistance\n");
    for (int i = 0; i < V; i++) printf("%d\t%d\n", i, dist[i]);
}

int main() {
    int graph[V][V] = {{0, 10, 0, 0, 0}, {10, 0, 5, 0, 0}, {0, 5, 0, 20, 1}, {0, 0, 20, 0, 2}, {0, 0, 1, 2, 0}};
    dijkstra(graph, 0);
    return 0;
}
