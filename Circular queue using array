#include <stdio.h>
#include <stdlib.h>
#define MAX 5

typedef struct {
    int items[MAX], front, rear;
} CircularQueue;

CircularQueue* create() {
    CircularQueue* q = malloc(sizeof(CircularQueue));
    q->front = q->rear = -1;
    return q;
}

void enqueue(CircularQueue* q, int val) {
    if ((q->rear + 1) % MAX == q->front) printf("Full\n");
    else {
        if (q->front == -1) q->front = 0;
        q->rear = (q->rear + 1) % MAX;
        q->items[q->rear] = val;
    }
}

int dequeue(CircularQueue* q) {
    int val = q->items[q->front];
    if (q->front == q->rear) q->front = q->rear = -1;
    else q->front = (q->front + 1) % MAX;
    return val;
}

void display(CircularQueue* q) {
    for (int i = q->front; i != q->rear; i = (i + 1) % MAX)
        printf("%d ", q->items[i]);
    printf("%d\n", q->items[q->rear]);
}

int main() {
    CircularQueue* q = create();
    enqueue(q, 10);
    enqueue(q, 20);
    display(q);
    dequeue(q);
    display(q);
    free(q);
    return 0;
}
