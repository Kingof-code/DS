#include <stdio.h>
#include <stdlib.h>

typedef struct bst {
    int data;
    struct bst *left, *right;
} Node;

Node* create(int val) {
    Node* temp = malloc(sizeof(Node));
    temp->data = val, temp->left = temp->right = NULL;
    return temp;
}

Node* insert(Node* root, int val) {
    if (!root) return create(val);
    if (val < root->data) root->left = insert(root->left, val);
    else root->right = insert(root->right, val);
    return root;
}

void inorder(Node* root) {
    if (!root) return;
    inorder(root->left);
    printf("%d ", root->data);
    inorder(root->right);
}

int main() {
    Node* root = NULL;
    root = insert(root, 10), insert(root, 5), insert(root, 15);
    printf("Inorder Traversal: ");
    inorder(root);
    return 0;
}
